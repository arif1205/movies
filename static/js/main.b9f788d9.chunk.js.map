{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/header/header.style.js","components/header/index.js","config.js","components/heroImg/heroImg.styles.js","components/heroImg/index.js","components/grid/grid.styles.js","components/grid/index.js","components/thumb/thumb.styles.js","components/thumb/index.js","components/spinner/index.js","components/spinner/spinner.styles.js","images/search-icon.svg","components/searchBar/searchBar.styles.js","components/searchBar/index.js","components/button/button.styles.js","components/button/index.js","API.js","helpers.js","components/hooks/useHomeFetch.js","images/no_image.jpg","components/home.js","components/breadCrumb/breadCrumb.styles.js","components/breadCrumb/index.js","components/movieInfo/movieInfo.styles.js","components/movieInfo/index.js","components/movieInfoBar/movieInfoBar.styles.js","components/movieInfoBar/index.js","components/actor/actor.styles.js","components/actor/index.js","components/movie.js","components/hooks/useMovieFetch.js","components/notFound.js","components/globalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","length","slice","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","e","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_result","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImg","id","BreadCrumb","movieTitle","backdrop","MovieInfo","NoImage","className","vote_average","directors","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9f788d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tbackground: var(--darkGrey);\r\n\tpadding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmax-width: var(--maxWidth);\r\n\tpadding: 20px 0;\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n\twidth: 200px;\r\n\r\n\t@media screen and (max-width: 500px) {\r\n\t\twidth: 150px;\r\n\t}\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n\twidth: 100px;\r\n\r\n\t@media screen and (max-width: 500px) {\r\n\t\twidth: 80px;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// images\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\r\n// styles\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./header.style\";\r\n\r\nconst Header = () => (\r\n\t<Wrapper>\r\n\t\t<Content>\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<LogoImg src={RMDBLogo} alt='rmdb-logo' />\r\n\t\t\t</Link>\r\n\t\t\t<TMDBLogoImg src={TMDBLogo} />\r\n\t\t</Content>\r\n\t</Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"4ebdf74856a780e80ad9685ae632a828\";\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w780\";\n\nexport {\n\tSEARCH_BASE_URL,\n\tPOPULAR_BASE_URL,\n\tAPI_URL,\n\tAPI_KEY,\n\tIMAGE_BASE_URL,\n\tBACKDROP_SIZE,\n\tPOSTER_SIZE,\n\tREQUEST_TOKEN_URL,\n\tLOGIN_URL,\n\tSESSION_ID_URL,\n};\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tbackground: linear-gradient(\r\n\t\t\tto bottom,\r\n\t\t\trgba(0, 0, 0, 0) 41%,\r\n\t\t\trgba(0, 0, 0, 0.65) 100%\r\n\t\t),\r\n\t\turl(${({ image }) => image}), var(--darkGrey);\r\n\tbackground-size: 100%, cover;\r\n\tbackground-position: center;\r\n\theight: 600px;\r\n\tposition: relative;\r\n\tanimation: animateHeroImage 1s;\r\n\r\n\t@keyframes animateHeroImage {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tpadding: 20px;\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n\tz-index: 100;\r\n\tmax-width: 700px;\r\n\tposition: absolute;\r\n\tbottom: 40px;\r\n\tmargin-right: 20px;\r\n\tmin-height: 100px;\r\n\tcolor: var(--white);\r\n\r\n\th1 {\r\n\t\tfont-size: var(--fontSuperBig);\r\n\r\n\t\t@media screen and (max-width: 720px) {\r\n\t\t\tfont-size: var(--fontBig);\r\n\t\t}\r\n\t}\r\n\r\n\tp {\r\n\t\tfont-size: var(--fontMed);\r\n\r\n\t\t@media screen and (max-width: 720px) {\r\n\t\t\tfont-size: var(--fontSmall);\r\n\t\t}\r\n\t}\r\n\r\n\t@media screen and (max-width: 720px) {\r\n\t\tmax-width: 100%;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// styles\r\nimport { Wrapper, Content, Text } from \"./heroImg.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n\t<Wrapper image={image}>\r\n\t\t<Content>\r\n\t\t\t<Text>\r\n\t\t\t\t<h1>{title}</h1>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{text.length <= 250\r\n\t\t\t\t\t\t? `${text}`\r\n\t\t\t\t\t\t: `${text.slice(0, 250)}...`}\r\n\t\t\t\t</p>\r\n\t\t\t</Text>\r\n\t\t</Content>\r\n\t</Wrapper>\r\n);\r\n\r\nHeroImage.propTypes = {\r\n\timage: PropTypes.string,\r\n\ttitle: PropTypes.string,\r\n\ttext: PropTypes.string,\r\n};\r\n\r\nexport default HeroImage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n\tpadding: 0 20px;\r\n\r\n\th1 {\r\n\t\tcolor: var(--medGrey);\r\n\r\n\t\t@media screen and (max-width: 768px) {\r\n\t\t\tfont-size: var(--fontBig);\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n\tgrid-gap: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// styles\r\nimport { Wrapper, Content } from \"./grid.styles\";\r\n\r\nconst Grid = ({ header, children }) => (\r\n\t<Wrapper>\r\n\t\t<h1>{header}</h1>\r\n\t\t<Content>{children}</Content>\r\n\t</Wrapper>\r\n);\r\n\r\nGrid.propTypes = {\r\n\theader: PropTypes.string,\r\n};\r\n\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tmax-width: 720px;\r\n\ttransition: all 0.3s;\r\n\tobject-fit: cover;\r\n\tborder-radius: 20px;\r\n\tanimation: animateThumb 0.5s;\r\n\r\n\t:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n\r\n\t@keyframes animateThumb {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n// styles\r\nimport { Image } from \"./thumb.styles\";\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => (\r\n\t<div>\r\n\t\t{clickable ? (\r\n\t\t\t<Link to={`/${movieId}`}>\r\n\t\t\t\t<Image src={image} alt='movie-thumb' />\r\n\t\t\t</Link>\r\n\t\t) : (\r\n\t\t\t<Image src={image} alt='movie-thumb' />\r\n\t\t)}\r\n\t</div>\r\n);\r\n\r\nThumb.propTypes = {\r\n\timage: PropTypes.string,\r\n\tmovieId: PropTypes.number,\r\n\tclickable: PropTypes.bool,\r\n};\r\n\r\nexport default Thumb;\r\n","// import React from 'react'\r\n\r\n// // styles\r\n// import {Spinner} from './spinner.styles'\r\n\r\n// const Spinner = () => ()\r\n\r\n// export default Spinner\r\n\r\nimport { Spinner } from \"./spinner.styles\";\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n\tborder: 5px solid var(--lightGrey);\r\n\tborder-top: 5px solid var(--medGrey);\r\n\tborder-radius: 50%;\r\n\twidth: 50px;\r\n\theight: 50px;\r\n\tanimation: spin 0.8s linear infinite;\r\n\tmargin: 20px auto;\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\theight: 100px;\r\n\tbackground: var(--darkGrey);\r\n\tpadding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tposition: relative;\r\n\tmax-width: var(--maxWidth);\r\n\twidth: 75%;\r\n\theight: 55px;\r\n\tbackground: var(--medGrey);\r\n\tmargin: 0 auto;\r\n\tborder-radius: 40px;\r\n\tcolor: var(--white);\r\n\r\n\timg {\r\n\t\tposition: absolute;\r\n\t\tleft: 16px;\r\n\t\ttop: 15px;\r\n\t\twidth: 25px;\r\n\t}\r\n\r\n\tinput {\r\n\t\tfont-size: 18px;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\tmargin: 8px 0;\r\n\t\tpadding: 0 0 0 60px;\r\n\t\tborder: 0;\r\n\t\twidth: 95%;\r\n\t\tbackground: transparent;\r\n\t\theight: 40px;\r\n\t\tcolor: var(--white);\r\n\r\n\t\t:focus {\r\n\t\t\toutline: none;\r\n\t\t}\r\n\t}\r\n\r\n\t@media screen and (max-width: 500px) {\r\n\t\twidth: 90%;\r\n\t}\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// image\r\nimport searchIcon from \"../../images/search-icon.svg\";\r\n//styles\r\nimport { Wrapper, Content } from \"./searchBar.styles\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n\tconst [state, setState] = useState(\"\");\r\n\tconst initial = useRef(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (initial.current) {\r\n\t\t\tinitial.current = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst timer = setTimeout(() => {\r\n\t\t\tsetSearchTerm(state);\r\n\t\t}, 500);\r\n\r\n\t\treturn () => clearTimeout(timer);\r\n\t}, [setSearchTerm, state]);\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Content>\r\n\t\t\t\t<img src={searchIcon} alt='search-icon' />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tplaceholder='Search Movie'\r\n\t\t\t\t\tonChange={(e) => setState(e.currentTarget.value)}\r\n\t\t\t\t\tvalue={state}\r\n\t\t\t\t/>\r\n\t\t\t</Content>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nSearchBar.propTypes = {\r\n\tsetSearchTerm: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n\tdisplay: block;\r\n\tbackground: var(--darkGrey);\r\n\twidth: 25%;\r\n\tmin-width: 200px;\r\n\theight: 50px;\r\n\tborder-radius: 30px;\r\n\tborder: 0;\r\n\tcolor: var(--white);\r\n\tmargin: 20px auto;\r\n\tfont-size: var(--fontMed);\r\n\toutline: none;\r\n\tcursor: pointer;\r\n\ttransition: all 0.2s;\r\n\r\n\t:hover {\r\n\t\topacity: 0.8;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// styles\r\nimport { Wrapper } from \"./button.styles\";\r\n\r\nconst Button = ({ text, callback }) => (\r\n\t<Wrapper type='button' onClick={callback}>\r\n\t\t{text}\r\n\t</Wrapper>\r\n);\r\n\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcallback: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n\tconst hours = Math.floor(time / 60);\n\tconst mins = time % 60;\n\treturn `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n\tconst formatter = new Intl.NumberFormat(\"en-US\", {\n\t\tstyle: \"currency\",\n\t\tcurrency: \"USD\",\n\t\tminimumFractionDigits: 0,\n\t});\n\treturn formatter.format(money);\n};\n\nexport const isPersistedState = (stateName) => {\n\tconst sessionState = sessionStorage.getItem(stateName);\n\treturn sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect, useRef } from \"react\";\r\nimport API from \"../../API\";\r\nimport { isPersistedState } from \"../../helpers\";\r\n\r\nconst initialState = {\r\n\tpage: 0,\r\n\tresults: [],\r\n\ttotal_pages: 0,\r\n\ttotal_result: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n\tconst [searchTerm, setSearchTerm] = useState(\"\");\r\n\tconst [state, setState] = useState(initialState);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n\tconst fetchMovies = async (page, searchTerm = \"\") => {\r\n\t\ttry {\r\n\t\t\tsetError(false);\r\n\t\t\tsetLoading(true);\r\n\r\n\t\t\tconst movies = await API.fetchMovies(searchTerm, page);\r\n\r\n\t\t\tsetState((prev) => ({\r\n\t\t\t\t...movies,\r\n\t\t\t\tresults:\r\n\t\t\t\t\tpage > 1\r\n\t\t\t\t\t\t? [...prev.results, ...movies.results]\r\n\t\t\t\t\t\t: [...movies.results],\r\n\t\t\t}));\r\n\t\t} catch (error) {\r\n\t\t\tsetError(true);\r\n\t\t}\r\n\t\tsetLoading(false);\r\n\t};\r\n\r\n\t// intial render and search\r\n\tuseEffect(() => {\r\n\t\tif (!searchTerm) {\r\n\t\t\tconst sessionState = isPersistedState(\"homeState\");\r\n\t\t\tif (sessionState) {\r\n\t\t\t\tsetState(sessionState);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetState(initialState);\r\n\t\tfetchMovies(1, searchTerm);\r\n\t}, [searchTerm]);\r\n\r\n\t// load more\r\n\tuseEffect(() => {\r\n\t\tif (!isLoadingMore) return;\r\n\t\tfetchMovies(state.page + 1, searchTerm);\r\n\t\tsetIsLoadingMore(false);\r\n\t}, [isLoadingMore, searchTerm, state.page]);\r\n\r\n\t// write to session change\r\n\tuseEffect(() => {\r\n\t\tif (!searchTerm)\r\n\t\t\tsessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n\t}, [searchTerm, state]);\r\n\r\n\treturn {\r\n\t\tstate,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tsearchTerm,\r\n\t\tsetSearchTerm,\r\n\t\tsetIsLoadingMore,\r\n\t};\r\n};\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\r\n// config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\r\n// components\r\nimport HeroImage from \"./heroImg\";\r\nimport Grid from \"./grid\";\r\nimport Thumb from \"./thumb\";\r\nimport Spinner from \"./spinner\";\r\nimport SearchBar from \"./searchBar\";\r\nimport Button from \"./button\";\r\n// Hook\r\nimport { useHomeFetch } from \"./hooks/useHomeFetch\";\r\n// Images\r\nimport NoImg from \"../images/no_image.jpg\";\r\n\r\nconst Home = () => {\r\n\tconst {\r\n\t\tstate,\r\n\t\tloading,\r\n\t\terror,\r\n\t\tsearchTerm,\r\n\t\tsetSearchTerm,\r\n\t\tsetIsLoadingMore,\r\n\t} = useHomeFetch();\r\n\r\n\tif (error) return <div>Something went wrong..</div>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!searchTerm && state.results[0] ? (\r\n\t\t\t\t<HeroImage\r\n\t\t\t\t\timage={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n\t\t\t\t\ttitle={state.results[0].original_title}\r\n\t\t\t\t\ttext={state.results[0].overview}\r\n\t\t\t\t/>\r\n\t\t\t) : null}\r\n\t\t\t<SearchBar setSearchTerm={setSearchTerm} />\r\n\t\t\t<Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n\t\t\t\t{state.results.map((movie) => (\r\n\t\t\t\t\t<Thumb\r\n\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\tclickable\r\n\t\t\t\t\t\timage={\r\n\t\t\t\t\t\t\tmovie.poster_path\r\n\t\t\t\t\t\t\t\t? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n\t\t\t\t\t\t\t\t: NoImg\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tmovieId={movie.id}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t\t{loading && <Spinner />}\r\n\t\t\t{state.page < state.total_pages && !loading && (\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttext='Load More'\r\n\t\t\t\t\tcallback={() => setIsLoadingMore(true)}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tbackground: var(--medGrey);\r\n\tcolor: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tmax-width: var(--maxWidth);\r\n\tpadding: 0 20px;\r\n\r\n\tspan {\r\n\t\tfont-size: var(--fontMed);\r\n\t\tcolor: var(--white);\r\n\t\tpadding-right: 10px;\r\n\r\n\t\t@media screen and (max-width: 700px) {\r\n\t\t\tfont-size: var(--fontSmall);\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n// styles\r\nimport { Wrapper, Content } from \"./breadCrumb.styles\";\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n\t<Wrapper>\r\n\t\t<Content>\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<span>Home</span>\r\n\t\t\t</Link>\r\n\t\t\t<span>|</span>\r\n\t\t\t<span>{movieTitle}</span>\r\n\t\t</Content>\r\n\t</Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n\tmovieTitle: PropTypes.string,\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tbackground: ${({ backdrop }) =>\r\n\t\tbackdrop\r\n\t\t\t? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}')`\r\n\t\t\t: \"#000\"};\r\n\tbackground-size: cover;\r\n\tbackground-position: center;\r\n\tpadding: 40px 20px;\r\n\tanimation: animateMovieInfo 1s;\r\n\r\n\t@keyframes animateMovieInfo {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\tmax-width: var(--maxWidth);\r\n\tmargin: 0 auto;\r\n\tbackground: rgba(0, 0, 0, 0.7);\r\n\tborder-radius: 20px;\r\n\r\n\t@media screen and (max-width: 768px) {\r\n\t\tdisplay: block;\r\n\t\tmax-height: none;\r\n\t}\r\n`;\r\n\r\nexport const Text = styled.div`\r\n\twidth: 100%;\r\n\tpadding: 20px 40px;\r\n\tcolor: var(--white);\r\n\toverflow: hidden;\r\n\r\n\t.rating-directors {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-start;\r\n\t}\r\n\r\n\t.score {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 35px;\r\n\t\theight: 35px;\r\n\t\tbackground: #fff;\r\n\t\tcolor: #000;\r\n\t\tfont-weight: 800;\r\n\t\tborder-radius: 50%;\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t.director {\r\n\t\tmargin: 0 0 0 40px;\r\n\r\n\t\tp {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n\r\n\th1 {\r\n\t\t@media screen and (max-width: 768px) {\r\n\t\t\tfont-size: var(--fontBig);\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// components\r\nimport Thumb from \"../thumb\";\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n// image\r\nimport NoImage from \"../../images/no_image.jpg\";\r\n// styles\r\nimport { Wrapper, Content, Text } from \"./movieInfo.styles\";\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n\t<Wrapper backdrop={movie.backdrop_path}>\r\n\t\t<Content>\r\n\t\t\t<Thumb\r\n\t\t\t\timage={\r\n\t\t\t\t\tmovie.poster_path\r\n\t\t\t\t\t\t? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n\t\t\t\t\t\t: NoImage\r\n\t\t\t\t}\r\n\t\t\t\tclickable={false}\r\n\t\t\t\talt='movie-thumb'\r\n\t\t\t/>\r\n\t\t\t<Text>\r\n\t\t\t\t<h1>{movie.title}</h1>\r\n\t\t\t\t<h3>PLOT</h3>\r\n\t\t\t\t<p>{movie.overview}</p>\r\n\r\n\t\t\t\t<div className='rating-directors'>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h3>RATING</h3>\r\n\t\t\t\t\t\t<div className='score'>{movie.vote_average}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='director'>\r\n\t\t\t\t\t\t<h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n\t\t\t\t\t\t{movie.directors.map((director) => (\r\n\t\t\t\t\t\t\t<p key={director.credit_id}>{director.name}</p>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Text>\r\n\t\t</Content>\r\n\t</Wrapper>\r\n);\r\n\r\nMovieInfo.propTypes = {\r\n\tmovie: PropTypes.object,\r\n};\r\n\r\nexport default MovieInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmin-height: 100px;\r\n\tbackground: var(--darkGrey);\r\n\tpadding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\tdisplay: flex;\r\n\tmax-width: var(--maxWidth);\r\n\twidth: 100%;\r\n\tmargin: 0 auto;\r\n\r\n\t.column {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tbackground: var(--medGrey);\r\n\t\tborder-radius: 20px;\r\n\t\tmargin: 0 20px;\r\n\t\tflex: 1;\r\n\r\n\t\t:first-child {\r\n\t\t\tmargin-left: 0;\r\n\t\t}\r\n\r\n\t\t:last-child {\r\n\t\t\tmargin-right: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t@media screen and (max-width: 768px) {\r\n\t\tdisplay: block;\r\n\r\n\t\t.column {\r\n\t\t\tmargin: 20px 0;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// helpers\r\nimport { calcTime, convertMoney } from \"../../helpers\";\r\n// styles\r\nimport { Wrapper, Content } from \"./movieInfoBar.styles\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n\t<Wrapper>\r\n\t\t<Content>\r\n\t\t\t<div className='column'>\r\n\t\t\t\t<p>Running time: {calcTime(time)}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='column'>\r\n\t\t\t\t<p>Budget: {convertMoney(budget)}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='column'>\r\n\t\t\t\t<p>Revenue: {convertMoney(revenue)}</p>\r\n\t\t\t</div>\r\n\t\t</Content>\r\n\t</Wrapper>\r\n);\r\n\r\nMovieInfoBar.propTypes = {\r\n\ttime: PropTypes.number,\r\n\tbudget: PropTypes.number,\r\n\trevenue: PropTypes.number,\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\tcolor: var(--white);\r\n\tbackground: var(--darkGrey);\r\n\tborder-radius: 20px;\r\n\tpadding: 50px;\r\n\ttext-align: center;\r\n\r\n\th3 {\r\n\t\tmargin: 10px 0 0 0;\r\n\t}\r\n\r\n\tp {\r\n\t\tmargin: 5px 0;\r\n\t}\r\n`;\r\n\r\nexport const Image = styled.img`\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: 200px;\r\n\tobject-fit: cover;\r\n\tborder-radius: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// styled\r\nimport { Wrapper, Image } from \"./actor.styles\";\r\n\r\nconst Actor = ({ name, character, imageUrl }) => (\r\n\t<Wrapper>\r\n\t\t<Image src={imageUrl} alt='actor-thumb' />\r\n\t\t<h3>{name}</h3>\r\n\t\t<p>{character}</p>\r\n\t</Wrapper>\r\n);\r\n\r\nActor.propTypes = {\r\n\tname: PropTypes.string,\r\n\tcharacter: PropTypes.string,\r\n\timageUrl: PropTypes.string,\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n// config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\n// components\r\nimport Grid from \"./grid\";\r\nimport Spinner from \"./spinner\";\r\nimport BreadCrumb from \"./breadCrumb\";\r\nimport MovieInfo from \"./movieInfo\";\r\nimport MovieInfoBar from \"./movieInfoBar\";\r\nimport Actor from \"./actor\";\r\n// Hook\r\nimport { useMovieFetch } from \"./hooks/useMovieFetch\";\r\n// Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Movie = () => {\r\n\tconst { movieId } = useParams();\r\n\tconst { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n\tif (loading) return <Spinner />;\r\n\tif (error) return <div>Something went wrong...</div>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BreadCrumb movieTitle={movie.original_title} />\r\n\t\t\t<MovieInfo movie={movie} />\r\n\t\t\t<MovieInfoBar\r\n\t\t\t\ttime={movie.runtime}\r\n\t\t\t\tbudget={movie.budget}\r\n\t\t\t\trevenue={movie.revenue}\r\n\t\t\t/>\r\n\t\t\t<Grid header='Actors'>\r\n\t\t\t\t{movie.actors.map((actor) => (\r\n\t\t\t\t\t<Actor\r\n\t\t\t\t\t\tkey={actor.credit_id}\r\n\t\t\t\t\t\tname={actor.name}\r\n\t\t\t\t\t\tcharacter={actor.character}\r\n\t\t\t\t\t\timageUrl={\r\n\t\t\t\t\t\t\tactor.profile_path\r\n\t\t\t\t\t\t\t\t? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n\t\t\t\t\t\t\t\t: NoImage\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Movie;\r\n","import { useState, useEffect } from \"react\";\r\nimport API from \"../../API\";\r\nimport { isPersistedState } from \"../../helpers\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n\tconst [state, setState] = useState({});\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchMovie = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tsetError(false);\r\n\r\n\t\t\t\tconst movie = await API.fetchMovie(movieId);\r\n\t\t\t\tconst credits = await API.fetchCredits(movieId);\r\n\t\t\t\t// get directors\r\n\t\t\t\tconst directors = credits.crew.filter(\r\n\t\t\t\t\t(member) => member.job === \"Director\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetState({\r\n\t\t\t\t\t...movie,\r\n\t\t\t\t\tactors: credits.cast,\r\n\t\t\t\t\tdirectors,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst sessionState = isPersistedState(movieId);\r\n\t\tif (sessionState) {\r\n\t\t\tsetState(sessionState);\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfetchMovie();\r\n\t}, [movieId]);\r\n\r\n\t// write to session storage\r\n\tuseEffect(() => {\r\n\t\tsessionStorage.setItem(movieId, JSON.stringify(state));\r\n\t}, [movieId, state]);\r\n\r\n\treturn { state, loading, error };\r\n};\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => <div>Not Found</div>;\r\n\r\nexport default NotFound;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --maxWidth: 1280px;\r\n    --white: #fff;\r\n    --lightGrey: #eee;\r\n    --medGrey: #353535;\r\n    --darkGrey: #1c1c1c;\r\n    --fontSuperBig: 2.5rem;\r\n    --fontBig: 1.5rem;\r\n    --fontMed: 1.2rem;\r\n    --fontSmall: 1rem;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Able', sans-serif;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 2rem;\r\n    font-weight: 600;\r\n    color: var(--white);\r\n  }\r\n\r\n  h3 {\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  p{\r\n    font-size: 1rem;\r\n    color: var(--white);\r\n  }\r\n\r\n`;\r\n","import React from \"react\";\n// Routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// components\nimport Header from \"./components/header\";\nimport Home from \"./components/home\";\nimport Movie from \"./components/movie\";\nimport NotFound from \"./components/notFound\";\n\n//styles\nimport { GlobalStyle } from \"./components/globalStyle\";\n\nconst App = () => (\n\t<Router>\n\t\t<Header />\n\t\t<Routes>\n\t\t\t<Route path='/' element={<Home />} />\n\t\t\t<Route path='/:movieId' element={<Movie />} />\n\t\t\t<Route path='/*' element={<NotFound />} />\n\t\t</Routes>\n\t\t<GlobalStyle />\n\t</Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}